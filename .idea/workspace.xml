<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="FakeGLRenderWindowRelease" targetName="FakeGLRenderWindowRelease" />
      <config projectName="FakeGLRenderWindowRelease" targetName="FakeGLRenderWindowRelease_autogen" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3af5bfe3-5a00-4b9a-a663-d3768be7fb1e" name="变更" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/FakeGL.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/FakeGL.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/FakeGL.h" beforeDir="false" afterPath="$PROJECT_DIR$/FakeGL.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/C.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/C.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/FakeGL.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/FakeGL.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/FakeGLRenderWidget.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/FakeGLRenderWidget.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/FakeGLRenderWindowRelease_autogen/mocs_compilation.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/FakeGLRenderWindowRelease_autogen/mocs_compilation.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/RenderController.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/RenderController.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/RenderWidget.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/RenderWidget.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/RenderWindow.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/RenderWindow.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/TexturedObject.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/TexturedObject.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/main.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease.dir/main.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease_autogen.dir/ParseCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/FakeGLRenderWindowRelease_autogen.dir/ParseCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/FakeGLRenderWindowRelease" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/FakeGLRenderWindowRelease" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="20UlbWohVBPsZrYrSzs2JSfyLUN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="cmake.loaded.for.project" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="preferences.lookFeel" />
  </component>
  <component name="RunManager" selected="CMake 应用程序.FakeGLRenderWindowRelease">
    <configuration name="FakeGLRenderWindowRelease" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="./objects/sphere10x10.obj ./textures/earth.ppm" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" WORKING_DIR="file://$PROJECT_DIR$/../../" PASS_PARENT_ENVS_2="true" PROJECT_NAME="FakeGLRenderWindowRelease" TARGET_NAME="FakeGLRenderWindowRelease" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="FakeGLRenderWindowRelease" RUN_TARGET_NAME="FakeGLRenderWindowRelease">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FakeGLRenderWindowRelease_autogen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="FakeGLRenderWindowRelease" TARGET_NAME="FakeGLRenderWindowRelease_autogen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake 应用程序.FakeGLRenderWindowRelease" />
      <item itemvalue="CMake 应用程序.FakeGLRenderWindowRelease_autogen" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="3af5bfe3-5a00-4b9a-a663-d3768be7fb1e" name="变更" comment="" />
      <created>1636107118528</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1636107118528</updated>
      <workItem from="1636107120664" duration="1325000" />
      <workItem from="1636226023982" duration="8201000" />
      <workItem from="1636672554997" duration="1751000" />
      <workItem from="1636711273238" duration="47363000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/FakeGL.cpp</url>
          <line>739</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>